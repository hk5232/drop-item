<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
</head>
<%= render "shared/header" %>

<section class="page-section portfolio" id="portfolio">
            <div class="container">
                <!-- Portfolio Section Heading-->
                <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">落とし物情報</h2>
                <!-- Icon Divider-->
                <div class="divider-custom" >
                    <div class="divider-custom-line"></div>
                    <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                    <div class="divider-custom-line"></div>
                </div>
              </div>

<div class="main">
<div class="left-main">
<div class="search">
 <h2>落とした場所を検索してください</h2>

<input id="address" type="textbox" name="location" value="新宿駅">
<input type="button" value="検索" onclick="codeAddress()">
</div>
<div id='map'></div>

<style>
#map {
  height: 600px;
  width: 600px;
  margin : auto;
  margin-top :20px;
}
</style>

    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script
      src="https://maps.googleapis.com/maps/api/js?key=<%=ENV['GOOGLE_MAPS_API_KEY']%>&callback=initMap&libraries=&v=weekly"
      async
    ></script>
</div>

<div class="right-main mt-5" id="list">
    
      <%= render :partial => "shared/list", locals:{data: @map_items} %>

</div>


</div>
<script>
 let infoWindow = [];
 let map
let geocoder
 let items = gon.items; 
 var markerData = items.length;
 var mapMarkerData = [];

      // 地図初期表示
      function initMap() {
        geocoder = new google.maps.Geocoder()
        var target = document.getElementById('map');

        // 地図の中心設定
        var centerp = {lat: 35.6809591, lng: 139.7673068 },

        // Google Mapの表示
        map = new google.maps.Map(target, {
          center: centerp,
          zoom: 16,
        });
     
          <% @items.each do |map| %>
              if (<%=map.latitude%> == "nil") { return true; }
              else{
    // google.maps.LatLngインスタンスを生成
    pos = new google.maps.LatLng(
    <%=map.latitude%>, //latitude
    <%=map.studios%> //longitude
    );
    default_marker = new google.maps.Marker({
    map: map,
    position: pos,
    
    });
     var myInfoWindow = new google.maps.InfoWindow({
    // 吹き出しに出す文
    content: '<%= link_to raw("#{map.name}<br/>詳細ページへ"), item_path(map.id), method: :get, class: "btn" %>',
    disableAutoPan: true
  });
  // 吹き出しを開く
  myInfoWindow.open(map,default_marker);
  // 吹き出しが閉じられたら、マーカークリックで再び開くようにしておく
  google.maps.event.addListener(myInfoWindow, "closeclick", function() {
    google.maps.event.addListenerOnce(default_marker, "click", function(event) {
      myInfoWindow.open(map, default_marker);
    });
  });
              }
    <% end %>
const list = document.getElementById("list");
google.maps.event.addListener(map, 'idle',function() {
            var mapMarkerData = [];

        //地図の範囲内を取得
        var bounds = map.getBounds();
        mapNE_lat = bounds.getNorthEast().lat();
        mapSW_lat = bounds.getSouthWest().lat();
        mapNE_lng = bounds.getNorthEast().lng();
        mapSW_lng = bounds.getSouthWest().lng();

        // console.log(mapNE_lat);
        // console.log(mapSW_lat);
        //console.log(mapNE_lng);
        // console.log(mapSW_lng);





        var j = 0;
        for (var i = 0; i < items.length; i++) {
          if (mapNE_lat >= items[i]['latitude'] && items[i]['latitude'] >= mapSW_lat) {
            if (mapNE_lng >= items[i]['studios'] && items[i]['studios'] >= mapSW_lng) { 
              mapMarkerData[j] = items[i];
              var name = items[i]['name']
              var address = items[i]['address']
              var image = items[i]['image']
              j++;

            }
          }
        }
        console.log(mapMarkerData)
     $.ajax({
       url: '/items/search',
       type: 'GET',
       dataType: 'json',
       data: {
          mapMarkerData: mapMarkerData
         },
         async: false, 
        dataType: 'json',
        success: function(result){
      console.debug("result" + result);
    },
    error: function(jqxhr, status, exception) {
      console.debug('jqxhr', jqxhr);
      console.debug('status', status);
      console.debug('exception', exception);
    }
     })
     .done(function(data){
       console.log(data.html)
            $('#list').children().remove();
            $('#list').html(data.html);
     })
      // Ajaxリクエストが失敗した場合
      .fail(function(XMLHttpRequest, textStatus, errorThrown){
        alert(errorThrown);
      });
      

  
});


      }

   function codeAddress(){
  // 入力を取得
  let inputAddress = document.getElementById('address').value;

  // geocodingしたあとmapを移動
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
      uluru = results[0].geometry.location;
// map.setCenterで地図が移動

map2 = new google.maps.Map(document.getElementById("map"), {
       center:results[0].geometry.location,
                zoom: 16
      });
<% @items.each do |map| %>
                 if (<%=map.latitude%> == "nil") { return true; }
              else{
    // google.maps.LatLngインスタンスを生成
    pos = new google.maps.LatLng(
    <%=map.latitude%>, //latitude
    <%=map.studios%> //longitude
    );
    default_marker = new google.maps.Marker({
    map: map2,
    position: pos,
    
    });
     var myInfoWindow = new google.maps.InfoWindow({
    // 吹き出しに出す文
    content: '<%= link_to raw("#{map.name}<br/>詳細ページへ"), item_path(map.id), method: :get, class: "btn" %>',
    disableAutoPan: true
  });
  // 吹き出しを開く
  myInfoWindow.open(map,default_marker);
  // 吹き出しが閉じられたら、マーカークリックで再び開くようにしておく
  google.maps.event.addListener(myInfoWindow, "closeclick", function() {
    google.maps.event.addListenerOnce(default_marker, "click", function(event) {
      myInfoWindow.open(map, default_marker);
    });
  });
              }
 <% end %>
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    };

    google.maps.event.addListener(map2, 'idle',function() {
            var mapMarkerData = [];

        //地図の範囲内を取得
        var bounds = map2.getBounds();
        mapNE_lat = bounds.getNorthEast().lat();
        mapSW_lat = bounds.getSouthWest().lat();
        mapNE_lng = bounds.getNorthEast().lng();
        mapSW_lng = bounds.getSouthWest().lng();

         console.log(mapNE_lat);
        // console.log(mapSW_lat);
        //console.log(mapNE_lng);
        // console.log(mapSW_lng);




 //             list.insertAdjacentHTML(`afterend`, `        
  //     <div class='item-info'>
  //        <h5 class='item-name2'>
  //          あ</h5>
  //       <h5 class='item-name'>
   //       い
  //        </h5>
  //                <div class='item-img-content'>
//う
  //        </div>
   //     </div>
///</li>
   //   `); 


        var j = 0;
        for (var i = 0; i < items.length; i++) {
          if (mapNE_lat >= items[i]['latitude'] && items[i]['latitude'] >= mapSW_lat) {
            if (mapNE_lng >= items[i]['studios'] && items[i]['studios'] >= mapSW_lng) { 
              mapMarkerData[j] = items[i];
              var name = items[i]['name']
              var address = items[i]['address']
              var image = items[i]['image']
              j++;

            }
          }
        }
        console.log(mapMarkerData)
     $.ajax({
       url: '/items/search',
       type: 'GET',
       dataType: 'json',
       data: {
          mapMarkerData: mapMarkerData
         },
         async: false, 
        dataType: 'json',
        success: function(result){
      console.debug("result" + result);
    },
    error: function(jqxhr, status, exception) {
      console.debug('jqxhr', jqxhr);
      console.debug('status', status);
      console.debug('exception', exception);
    }
     })
     .done(function(data){
       console.log(data.html)
            $('#list').children().remove();
            $('#list').html(data.html);
     })
      // Ajaxリクエストが失敗した場合
      .fail(function(XMLHttpRequest, textStatus, errorThrown){
        alert(errorThrown);
      });
      

  
});


  });
  



   }
     
    </script>
   
<footer class="footer text-center" style='width:100% !important; height:200px !important; margin-top :20px;' >
            <div class="container">
                <div class="row">
                    
                <div class="col-lg-12 mb-5 mb-lg-0">
                   <h1 class="text-uppercase mb-4">Drop Item&emsp;
                 
                      <%= link_to image_tag("app-store.svg", class:"apple-btn"), "#" %>
                       <%= link_to image_tag("google-play.png", class:"google-btn"), "#" %>
                   </h1>
                </div>
                    
                </div>
            </div>
        </footer>